# Generated by Django 5.0.4 on 2024-04-18 09:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overhead_cost', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='PriceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=500)),
                ('invoice_id', models.CharField(max_length=50, unique=True)),
                ('invoice_title', models.CharField(max_length=255)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now)),
                ('company_location', models.CharField(max_length=255)),
                ('moodboard_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('illustration_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('storyboard_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('compositing_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('editing_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('motion_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('modelling_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('texturing_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('rigging_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('lookdev_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('layout_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('animation_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('fx_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('lighting_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('rendering_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('voiceover_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('audio_studio_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('music_sync_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('prod_mgt', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('total_sum', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('vat_price', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
                ('final_cost', models.CharField(blank=True, default='FREE', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.DecimalField(decimal_places=2, default=None, max_digits=15)),
                ('task', models.CharField(default=None, max_length=50)),
            ],
            options={
                'verbose_name': 'Salary',
                'verbose_name_plural': 'Salaries',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PriceInclude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moodboard', models.BooleanField(default=True)),
                ('illustration', models.BooleanField(default=True)),
                ('storyboard', models.BooleanField(default=True)),
                ('compositing', models.BooleanField(default=True)),
                ('editing', models.BooleanField(default=True)),
                ('motion', models.BooleanField(default=True)),
                ('modelling', models.BooleanField(default=True)),
                ('texturing', models.BooleanField(default=True)),
                ('rigging', models.BooleanField(default=True)),
                ('animation', models.BooleanField(default=True)),
                ('fx', models.BooleanField(default=True)),
                ('lighting', models.BooleanField(default=True)),
                ('rendering', models.BooleanField(default=True)),
                ('voiceover', models.BooleanField(default=True)),
                ('music_sync', models.BooleanField(default=True)),
                ('audio_studio', models.BooleanField(default=True)),
                ('layout', models.BooleanField(default=True)),
                ('lookdev', models.BooleanField(default=True)),
                ('price_detail', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='accounts.pricedetail')),
            ],
        ),
    ]
